<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Big Branch Theory Podcast</title>
    <link>https://thebigbranchtheorypodcast.github.io/</link>
    <description>Recent content on The Big Branch Theory Podcast</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>Esta obra está bajo una Licencia Creative Commons Atribución 4.0 Internacional.</copyright>
    <lastBuildDate>Wed, 01 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://thebigbranchtheorypodcast.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Caring Task con Manuel Rivero, Parte 1.</title>
      <link>https://thebigbranchtheorypodcast.github.io/post/caring-task-deuda-tecnica-manuel-rivero/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thebigbranchtheorypodcast.github.io/post/caring-task-deuda-tecnica-manuel-rivero/</guid>
      <description>Caring Task y aporte de Valor Como mencionabamos en el episodio anterior sobre Deuda Ténica el mayor problema de la métafora es que deja fuera toda la influencia que tiene el trabajo de mantenimiento de software que no es intrinsicamente técnico. Durante una consultoría a priori de practicas técnicas Manu y Joan Valduvieco se dieron cuenta que trabajando sólo el aspecto técnico no se conseguiría un buen resultado.
Lo que propone este marco de trabajo es una redefinición del concepto de valor para empezar a considerar valioso para la empresa no sólo el trabajo hasta ahora considerado como productivo (sacar funcionalidad), si no también todo el trabajo dedicado a cuidar de la sostenibilidad del sistema que genera valor: el software y el equipo, que denominan tareas de cuidados.</description>
    </item>
    
    <item>
      <title>Deuda Técnica</title>
      <link>https://thebigbranchtheorypodcast.github.io/post/deuda-t%C3%A9cnica/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thebigbranchtheorypodcast.github.io/post/deuda-t%C3%A9cnica/</guid>
      <description>Deuda Técnica Esta vez llegamos con un formato muy distinto y con un invitado, Ronny. En este episodio damos un repaso bibliográfico intenso para intentar definir y sentar las bases sobre algunas de las cuestiones más comunes en relación a la Deuda Técnica:
 ¿Que es la deuda técnica? ¿Como la identificamos? Tipos de deuda técnica Como hacer visible la deuda técnica asumida (Metricas, Trello, …) Consecuencias de tener deuda técnica Donde merece la pena tener deuda técnica  Si te ha gustando este episodio, estate a la espera porque seguiremos profundizando en el tema.</description>
    </item>
    
    <item>
      <title>Formación y experiencia como programador</title>
      <link>https://thebigbranchtheorypodcast.github.io/post/formaci%C3%B3n-y-experiencia-como-programador/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thebigbranchtheorypodcast.github.io/post/formaci%C3%B3n-y-experiencia-como-programador/</guid>
      <description>Formación y experiencia como programador Hoy nos llenamos de valentía e intentamos hablar sobre un tema muy amplio y complejo. Damos un pequeño repaso a cosas que nos funcionan en cada una de nuestras circunstancia y cosas que nos han funcionado en el pasado. Desde nuestra etapa inicial muy vinculada a la universidad a nuestro día a día donde hay que compaginar y encontrar un buen balance. Si tienes algo que aportar contacta con nosotros y hablemos para hacer el podcast más diverso.</description>
    </item>
    
    <item>
      <title>Microservicios</title>
      <link>https://thebigbranchtheorypodcast.github.io/post/microservicios/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thebigbranchtheorypodcast.github.io/post/microservicios/</guid>
      <description>Microservicios Segunda entrega con un formato algo distinto, debatimos un poco sobre nuestra experiencia desde que empezamos con microservicios hasta la actualidad y como hemos ido cambiando de parecer. Encontrando todas las fortalezas y pasando por los posibles problemas de esta arquitectura. Si tienes algo que aportar contacta con nosotros y hablemos para hacer el podcast más diverso. En este episodio participan:
 Alfredo Casado (https://twitter.com/AlfredoCasado) Daniel Ojeda (https://twitter.com/SuuiGD) Juan Vega (https://twitter.</description>
    </item>
    
    <item>
      <title>Pair Programming</title>
      <link>https://thebigbranchtheorypodcast.github.io/post/pair-programming/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thebigbranchtheorypodcast.github.io/post/pair-programming/</guid>
      <description>Pair Programming En este episodio hablamos sobre como ve cada uno de nosotros el Pair Programming, que dificultades hemos encontrado aplicandola, recordamos algunos mitos y finalmente hacemos un pequeño resumen para quienes que esten interesado en ponerse manos a la obra. Si tienes algo que aportar contacta con nosotros y hablemos para hacer el podcast más diverso. En este episodio participan:
 Alfredo Casado (https://twitter.com/AlfredoCasado) Daniel Ojeda (https://twitter.com/SuuiGD) Juan Vega (https://twitter.</description>
    </item>
    
    <item>
      <title>Esto es The Big Branch Theory Podcast</title>
      <link>https://thebigbranchtheorypodcast.github.io/bienvenida/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thebigbranchtheorypodcast.github.io/bienvenida/</guid>
      <description>Somos un grupo de amigos que después de mucho tiempo por fin hemos dado el paso y hemos empezado un podcast para compartir los debates sobre Ingeniería de Software y el mundo del desarrollo de productos software que normalmente se quedaba entre nosotros. Las temáticas no estarán restringidas a ninguna tecnología concreta; intentaremos hablar de temas transversales como por ejemplo buenas prácticas, testing, arquitectura, aprendizaje, nuestro amigo el legacy code y otros muchos.</description>
    </item>
    
  </channel>
</rss>